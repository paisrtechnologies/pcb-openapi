# yaml-language-server: $schema=https://json-schema.org/draft/2020-12/schema

openapi: 3.0.4
info:
  title: Paisr API
  version: 2.2.1
  description: Paisr is the payment infrastructure for the Caribbean.
  contact:
    name: Customer Support
    email: support@paisr.tech
    url: https://paisr.tech/contact
  termsOfService: https://paisr.tech/legal/terms-of-service
externalDocs:
  url: https://docs.paisr.tech
servers:
  - url: https://api.live.paisr.tech/{version}
    description: Live Server
    variables:
      version:
        default: v2
        enum:
          - v2
        description: API version
  - url: https://api.staging.paisr.tech/{version}
    description: Staging Server
    variables:
      version:
        default: v2
        enum:
          - v2
        description: API version
security:
  - bearerAuth: []
tags:
  - name: Business
    description: Business only resource.
  - name: Tokens
    description: Create, manage, and revoke access tokens securely.
  - name: Webhooks
    description: Configure, test, and monitor webhooks for real-time updates.
  - name: Wallets
    description: Create and manage digital wallets, connected accounts, contacts etc.
  - name: Balances
    description: Create and manage virtual wallet balances.
  - name: Transactions
    description: Read and filter wallet transactions.
  - name: Transfers
    description: Initiate method based transfers.
  - name: Invoices
    description: Generate, send, and manage invoices.
  - name: Subscriptions
    description: Create and manage subscriptions.
  - name: Customers
    description: Create and manage customers.
  - name: Vouchers
    description: Create, manage, and track the usage of discounts.
  - name: Plans
    description: Create and manage billing plans.
  - name: Payments
    description: Initiate and manage payments.
  - name: Provider Connections
    description: Manage built-in and external payment provider connections.
  - name: Analytics
    description: Access metrics on resources.
  - name: Logs
    description: Access API activity logs.

paths:
  /access-tokens:
    get:
      tags:
        - Tokens
      summary: Get Tokens
      description: Fetch a list of access tokens.
      responses:
        "200":
          description: Successfully retrieved the list of profile access tokens.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      tokens:
                        type: array
                        items:
                          $ref: "#/components/schemas/AccessToken"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Tokens
      summary: Create Token
      description: Generate a new access token.
      requestBody:
        description: The details required to create an access token.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostAccessTokenRequest"
      responses:
        "200":
          description: Successfully created token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /access-tokens/{token_id}:
    get:
      tags:
        - Tokens
      summary: Get Token
      description: Fetch token information.
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            description: The Token ID.
            pattern: "^tkn_.*$"
      responses:
        "200":
          description: Successfully retrieved token details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/AccessToken"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Tokens
      summary: Update Token
      description: Modify token information.
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            description: The Token ID.
            pattern: "^tkn_.*$"
      requestBody:
        description: The details required to update the token.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutAccessTokenRequest"
      responses:
        "200":
          description: Successfully updated token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Tokens
      summary: Revoke Token
      description: Revoke a token's access.
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            description: The Token ID.
            pattern: "^tkn_.*$"
      responses:
        "200":
          description: Successfully revoked token.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /access-tokens/{token_id}/permissions:
    post:
      tags:
        - Tokens
      summary: Add Permission
      description: Grant additional permissions to a token.
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            description: The Token ID.
            pattern: "^tkn_.*$"
      requestBody:
        description: The details required to add a permissio.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostAccessTokenPermissionRequest"
      responses:
        "200":
          description: Successfully added permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /access-tokens/{token_id}/permissions/{permission_id}:
    delete:
      tags:
        - Tokens
      summary: Remove Permission
      description: Remove a permission from a token.
      parameters:
        - name: token_id
          in: path
          required: true
          schema:
            type: string
            description: The Token ID.
            pattern: "^tkn_.*$"
        - name: permission_id
          in: path
          required: true
          schema:
            type: string
            description: The Permission ID.
            pattern: "^tpm_.*$"
      responses:
        "200":
          description: Successfully removed permission.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /webhooks:
    get:
      tags:
        - Webhooks
      summary: Get Webhooks
      description: Fetch a list of webhooks.
      responses:
        "200":
          description: Successfully retrieved the list of profile webhooks.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      webhooks:
                        type: array
                        items:
                          $ref: "#/components/schemas/Webhook"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Webhooks
      summary: Create Webhook
      description: Create a new webhook.
      requestBody:
        description: The details required to create a webhook.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWebhookRequest"
      responses:
        "200":
          description: Successfully created webhook.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /webhooks/{webhook_id}:
    get:
      tags:
        - Webhooks
      summary: Get Webhook
      description: Fetch webhook information.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully retrieved webhook details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/Webhook"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Webhooks
      summary: Update Webhook
      description: Modify webhook information.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      requestBody:
        description: The details required to update the webhook.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutWebhookRequest"
      responses:
        "200":
          description: Successfully updated webhook.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Webhooks
      summary: Modify Webhook
      description: Activate or deactivate webhook.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully updated webhook.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Webhooks
      summary: Remove Webhook
      description: Remove a webhook.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully removed webhook.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /webhooks/{webhook_id}/test:
    post:
      tags:
        - Webhooks
      summary: Test Webhook
      description: Simulate a test event.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully triggered test event.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /webhooks/{webhook_id}/stats:
    get:
      tags:
        - Webhooks
      summary: Get Stats
      description: Fetch webhook performace metrics.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully retrieved webhook stats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    $ref: "#/components/schemas/WebhookStats"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /webhooks/{webhook_id}/secret:
    get:
      tags:
        - Webhooks
      summary: Get Secret
      description: Fetch webhook secret.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully retrieved webhook secret.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/WebhookSecret"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Webhooks
      summary: Rotate Secret
      description: Rotate webhook secret.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully rotated webhook secret.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /webhooks/{webhook_id}/triggers:
    post:
      tags:
        - Webhooks
      summary: Add Trigger
      description: Add additional triggers to a webhook.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      requestBody:
        description: The details required to add a trigger.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWebhookTriggerRequest"
      responses:
        "200":
          description: Successfully added permissions.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /webhooks/{webhook_id}/triggers/{trigger_id}:
    delete:
      tags:
        - Webhooks
      summary: Remove Trigger
      description: Remove a trigger from a webhook.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
        - name: trigger_id
          in: path
          required: true
          schema:
            type: string
            description: The Trigger ID.
            pattern: "^wtr_.*$"
      responses:
        "200":
          description: Successfully removed trigger.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /webhooks/{webhook_id}/events:
    get:
      tags:
        - Webhooks
      summary: Get Events
      description: Fetch a list of webhook events.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
      responses:
        "200":
          description: Successfully retrieved the list of webhook events.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      events:
                        type: array
                        items:
                          $ref: "#/components/schemas/WebhookEvent"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /webhooks/{webhook_id}/events/{event_id}:
    post:
      tags:
        - Webhooks
      summary: Retry Event
      description: Resend a failed webhook event.
      parameters:
        - name: webhook_id
          in: path
          required: true
          schema:
            type: string
            description: The Webhook ID.
            pattern: "^whk_.*$"
        - name: event_id
          in: path
          required: true
          schema:
            type: string
            description: The Event ID.
            pattern: "^wev_.*$"
      responses:
        "200":
          description: Successfully processed event.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets:
    get:
      tags:
        - Wallets
      summary: Get Wallets
      description: Fetch a list of wallets.
      responses:
        "200":
          description: Successfully retrieved the list of walllets.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      wallets:
                        type: array
                        items:
                          $ref: "#/components/schemas/Wallet"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Wallets
      summary: Create Wallet
      description: Create a new wallet.
      requestBody:
        description: The details required to create a wallet.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWalletRequest"
      responses:
        "200":
          description: Successfully created wallet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}:
    get:
      tags:
        - Wallets
      summary: Get Wallet
      description: Fetch wallet information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully retrieved wallet details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/Wallet"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Wallets
      summary: Update Profile
      description: Modify wallet profile information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      requestBody:
        description: The details required to update the wallet profile.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutWalletRequest"
      responses:
        "200":
          description: Successfully updated wallet profile.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Wallets
      summary: Update Wallet
      description: Modify wallet information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      requestBody:
        description: The details required to update a wallet.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchWalletRequest"
      responses:
        "200":
          description: Successfully updated wallet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Wallets
      summary: Delete Wallet
      description: Remove a wallet from your profile.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully removed wallet.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/pin:
    get:
      tags:
        - Wallets
      summary: Get PIN
      description: Fetch wallet PIN.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully retrieved wallet PIN.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/WalletPin"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Wallets
      summary: Rotate PIN
      description: Rotate wallet PIN.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully rotated wallet PIN.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/statements:
    get:
      tags:
        - Wallets
      summary: Get Statements
      description: Fetch a list of generated wallet statements.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully retrieved the list of wallet statements.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      statements:
                        type: array
                        items:
                          $ref: "#/components/schemas/WalletStatement"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets/{wallet_id}/transactions:
    get:
      tags:
        - Transactions
      summary: Get Transactions
      description: Fetch a list of wallet transactions.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: balance_id
          in: query
          required: false
          schema:
            type: string
            description: The ID of the balance you want to filter based on.
            pattern: "^(ica_|bca_).*"
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - processing
              - settled
              - requires-approval
              - declined
              - failed
              - cancelled
            description: The status of the transactions you want to filter based on.
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - debit
              - credit
            description: The type of the transactions you want to filter based on.
        - name: method
          in: query
          required: false
          schema:
            type: string
            enum:
              - P2P
              - A2A
              - TopUp
              - Payout
              - EcomPay
            description: The method of the transactions you want to filter based on.
        - name: limit
          in: query
          required: false
          schema:
            type: number
            description: The number of transactions to return in the response.
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Successfully retrieved the list of wallet transactions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      transactions:
                        type: array
                        items:
                          oneOf:
                            - $ref: "#/components/schemas/WalletOutboundTransaction"
                            - $ref: "#/components/schemas/WalletInboundTransaction"
                            - $ref: "#/components/schemas/WalletPayTransaction"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/transactions/{transaction_id}:
    get:
      tags:
        - Transactions
      summary: Get Transaction
      description: Fetch transaction information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
            description: The Transaction ID.
            pattern: "^tra_.*$"
      responses:
        "200":
          description: Successfully retrieved transaction details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    oneOf:
                      - $ref: "#/components/schemas/WalletOutboundTransaction"
                      - $ref: "#/components/schemas/WalletInboundTransaction"
                      - $ref: "#/components/schemas/WalletPayTransaction"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets/{wallet_id}/balances:
    get:
      tags:
        - Balances
      summary: Get Balances
      description: Fetch a list of wallet balances.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: type
          in: query
          required: false
          schema:
            description: The type of balances you want to filter based on.
            $ref: "#/components/schemas/WalletBalanceType"
        - name: currency
          in: query
          required: false
          schema:
            type: string
            description: The currency you want to filter based on.
            pattern: ^[A-Z]{3}$
      responses:
        "200":
          description: Successfully retrieved the list of wallet balances.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      balances:
                        type: array
                        items:
                          $ref: "#/components/schemas/WalletBalance"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Balances
      summary: Open Balance
      description: Open a new wallet balance.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      requestBody:
        description: The details required to create a balance.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWalletBalanceRequest"
      responses:
        "200":
          description: Successfully created wallet balance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/balances/{balance_id}:
    get:
      tags:
        - Balances
      summary: Get Balance
      description: Fetch balance information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: balance_id
          in: path
          required: true
          schema:
            type: string
            description: The Balance ID.
            pattern: "^(bca_|ica_).*"
      responses:
        "200":
          description: Successfully retrieved wallet balance details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/WalletBalance"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Balances
      summary: Update Balance
      description: Modify balance information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: balance_id
          in: path
          required: true
          schema:
            type: string
            description: The Balance ID.
            pattern: "^(bca_|ica_).*"
      requestBody:
        description: The details required to update the wallet balance.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutWalletBalanceRequest"
      responses:
        "200":
          description: Successfully updated wallet balance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Balances
      summary: Close Balance
      description: Permanently close a balance.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: balance_id
          in: path
          required: true
          schema:
            type: string
            description: The Balance ID.
            pattern: "^(bca_|ica_).*"
      responses:
        "200":
          description: Successfully removed wallet balance.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets/{wallet_id}/accounts:
    get:
      tags:
        - Wallets
      summary: Get Accounts
      description: Fetch a list of wallet accounts
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully retrieved the list of wallet accounts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      accounts:
                        type: array
                        items:
                          $ref: "#/components/schemas/WalletAccount"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Wallets
      summary: Connect Account
      description: Connect a new bank account.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      requestBody:
        description: The details required to connect a bank account.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWalletAccountRequest"
      responses:
        "200":
          description: Successfully created wallet account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/accounts/{account_id}:
    get:
      tags:
        - Wallets
      summary: Get Account
      description: Fetch account information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            description: The Account ID.
            pattern: "^cwa_.*$"
      responses:
        "200":
          description: Successfully retrieved wallet account details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/WalletAccount"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Wallets
      summary: Verify Account
      description: Verify account ownership.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            description: The Account ID.
            pattern: "^cwa_.*$"
      requestBody:
        description: The details required to verify a wallet account.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchWalletAccountRequest"
      responses:
        "200":
          description: Successfully verified wallet account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Wallets
      summary: Remove Account
      description: Permanently remove a connected account.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: account_id
          in: path
          required: true
          schema:
            type: string
            description: The Account ID.
            pattern: "^cwa_.*$"
      responses:
        "200":
          description: Successfully removed wallet account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets/{wallet_id}/contacts:
    get:
      tags:
        - Wallets
      summary: Get Contacts
      description: Fetch a list of wallet contacts.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully retrieved the list of wallet contacts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      contacts:
                        type: array
                        items:
                          $ref: "#/components/schemas/WalletContact"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Wallets
      summary: Add Contact
      description: Create a new wallet contact.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      requestBody:
        description: The details required to add a contact.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWalletContactRequest"
      responses:
        "200":
          description: Successfully created wallet contact.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/contacts/{contact_id}:
    get:
      tags:
        - Wallets
      summary: Get Contact
      description: Fetch contact information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
            description: The Contact ID.
            pattern: "^fav_.*$"
      responses:
        "200":
          description: Successfully retrieved wallet contact details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/WalletContact"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Wallets
      summary: Remove Contact
      description: Permanently delete a contact.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: contact_id
          in: path
          required: true
          schema:
            type: string
            description: The Contact ID.
            pattern: "^fav_.*$"
      responses:
        "200":
          description: Successfully removed wallet contact.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /wallets/{wallet_id}/links:
    get:
      tags:
        - Wallets
      summary: Get Links
      description: Fetch a list of wallet payment links.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      responses:
        "200":
          description: Successfully retrieved the list of wallet payment links.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      links:
                        type: array
                        items:
                          $ref: "#/components/schemas/WalletPaymentLink"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Wallets
      summary: Create Link
      description: Create a new payment link.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
      requestBody:
        description: The details required to create a payment link.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostWalletPaymentLinkRequest"
      responses:
        "200":
          description: Successfully created payment link.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /wallets/{wallet_id}/links/{link_id}:
    get:
      tags:
        - Wallets
      summary: Get Link
      description: Fetch payment link information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: link_id
          in: path
          required: true
          schema:
            type: string
            description: The Payment Link ID.
            pattern: "^wpr_.*$"
      responses:
        "200":
          description: Successfully retrieved payment link details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/WalletPaymentLink"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Wallets
      summary: Update Link
      description: Modify payment link information.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: link_id
          in: path
          required: true
          schema:
            type: string
            description: The Payment Link ID.
            pattern: "^wpr_.*$"
      requestBody:
        description: The details required to update a payment link.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutWalletPaymentLinkRequest"
      responses:
        "200":
          description: Successfully updated payment link.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Wallets
      summary: Remove Link
      description: Permanently delete a payment link.
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: string
            description: The Wallet ID.
            pattern: "^(buw_|inw_).*"
        - name: link_id
          in: path
          required: true
          schema:
            type: string
            description: The Payment Link ID.
            pattern: "^wpr_.*$"
      responses:
        "200":
          description: Successfully removed wallet payment link.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /transfers/initiate/{method}:
    post:
      tags:
        - Transfers
      summary: Initiate Transfer
      description: Start a transfer operation.
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
            enum:
              - peer
              - move
              - bank
            description: The Transfer Method.
      requestBody:
        description: The details required to initiate the transfer.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/PostPeerTransferRequest"
                - $ref: "#/components/schemas/PostMoveTransferRequest"
                - $ref: "#/components/schemas/PostBankTransferRequest"
      responses:
        "200":
          description: Successfully initiated transfer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /transfers/initiate/batch:
    post:
      tags:
        - Transfers
      summary: Batch Transfer
      description: Start a batch transfer operation.
      requestBody:
        description: The details required to initiate the transfers.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBatchTransferRequest"
      responses:
        "200":
          description: Successfully initiated transfers.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferBatchResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /transfers/{transaction_id}/approve:
    post:
      tags:
        - Transfers
      summary: Approve Transfer
      description: Approve a transfer operation.
      parameters:
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
            description: The Transaction ID.
            pattern: "^tra_.*$"
      requestBody:
        description: The details required to approve a transfer.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApproveTransferRequest"
      responses:
        "200":
          description: Successfully approved transfer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /transfers/{transaction_id}/cancel:
    post:
      tags:
        - Transfers
      summary: Cancel Transfer
      description: Cancel a transfer operation.
      parameters:
        - name: transaction_id
          in: path
          required: true
          schema:
            type: string
            description: The Transaction ID.
            pattern: "^tra_.*$"
      requestBody:
        description: The details required to cancel a transfer.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCancelTransferRequest"
      responses:
        "200":
          description: Successfully canceled transfer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /customers:
    get:
      tags:
        - Customers
        - Business
      summary: Get Customers
      description: Fetch a list of customers.
      responses:
        "200":
          description: Successfully retrieved the list of customers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      customers:
                        type: array
                        items:
                          $ref: "#/components/schemas/Customer"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Customers
        - Business
      summary: Add Customer
      description: Add a new customer.
      requestBody:
        description: The details required to create a customer.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostCustomerRequest"
      responses:
        "200":
          description: Successfully created customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /customers/{customer_id}:
    get:
      tags:
        - Customers
        - Business
      summary: Get Customer
      description: Fetch customer information.
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
            description: The Customer ID.
            pattern: "^cus_.*$"
      responses:
        "200":
          description: Successfully retrieved customer details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/Customer"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Customers
        - Business
      summary: Update Customer
      description: Modify customer information.
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
            description: The Customer ID.
            pattern: "^cus_.*$"
      requestBody:
        description: The details required to update a customer.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutCustomerRequest"
      responses:
        "200":
          description: Successfully updated customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Customers
        - Business
      summary: Restore Customer
      description: Restore an archived customer.
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
            description: The Customer ID.
            pattern: "^cus_.*$"
      responses:
        "200":
          description: Successfully restored customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Customers
        - Business
      summary: Remove Customer
      description: Permanently remove / archive a customer.
      parameters:
        - name: customer_id
          in: path
          required: true
          schema:
            type: string
            description: The Customer ID.
            pattern: "^cus_.*$"
      responses:
        "200":
          description: Successfully removed customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /vouchers:
    get:
      tags:
        - Vouchers
        - Business
      summary: Get Vouchers
      description: Fetch a list of vouchers.
      responses:
        "200":
          description: Successfully retrieved the list of vouchers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      vouchers:
                        type: array
                        items:
                          $ref: "#/components/schemas/Voucher"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Vouchers
        - Business
      summary: Create Voucher
      description: Create a new voucher.
      requestBody:
        description: The details required to create a voucher.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostVoucherRequest"
      responses:
        "200":
          description: Successfully created voucher.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /vouchers/apply:
    post:
      tags:
        - Vouchers
        - Business
      summary: Apply Voucher
      description: Apply a voucher to an eligible invoice.
      requestBody:
        description: The details required to apply a voucher to an invoice.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostApplyVoucherRequest"
      responses:
        "200":
          description: Successfully applied voucher.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /vouchers/{voucher_id}:
    get:
      tags:
        - Vouchers
        - Business
      summary: Get Voucher
      description: Fetch voucher information.
      parameters:
        - name: voucher_id
          in: path
          required: true
          schema:
            type: string
            description: The Voucher ID.
            pattern: "^vch_.*$"
      responses:
        "200":
          description: Successfully retrieved voucher details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/Voucher"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Vouchers
        - Business
      summary: Update Voucher
      description: Modify voucher information.
      parameters:
        - name: voucher_id
          in: path
          required: true
          schema:
            type: string
            description: The Voucher ID.
            pattern: "^vch_.*$"
      requestBody:
        description: The details required to update a voucher.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutVoucherRequest"
      responses:
        "200":
          description: Successfully updated voucher.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Vouchers
        - Business
      summary: Remove Voucher
      description: Permanently delete a voucher.
      parameters:
        - name: voucher_id
          in: path
          required: true
          schema:
            type: string
            description: The Voucher ID.
            pattern: "^vch_.*$"
      responses:
        "200":
          description: Successfully removed voucher.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /plans:
    get:
      tags:
        - Plans
        - Business
      summary: Get Plans
      description: Fetch a list of plans.
      parameters:
        - name: type
          in: query
          required: false
          schema:
            type: string
            description: The type you want to filter based on.
            enum:
              - standard
              - metered
        - name: currency
          in: query
          required: false
          schema:
            type: string
            description: The currency you want to filter based on.
            pattern: ^[A-Z]{3}$
        - name: active
          in: query
          required: false
          schema:
            type: boolean
            description: The state of options you want to filter based on.
        - name: limit
          in: query
          required: false
          schema:
            type: number
            description: The number of plans to return in the response.
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Successfully retrieved the list of plans.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  data:
                    type: object
                    properties:
                      plans:
                        type: array
                        items:
                          $ref: "#/components/schemas/Plan"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Plans
        - Business
      summary: Create Plan
      description: Create a new plan.
      requestBody:
        description: The details required to create a plan.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostPlanRequest"
      responses:
        "200":
          description: Successfully created plan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /plans/{plan_id}:
    get:
      tags:
        - Plans
        - Business
      summary: Get Plan
      description: Fetch plan information.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
        - name: active
          in: query
          required: false
          schema:
            type: boolean
            description: The state of options you want to filter based on.
      responses:
        "200":
          description: Successfully retrieved plan details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  data:
                    $ref: "#/components/schemas/Plan"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Plans
        - Business
      summary: Update Plan
      description: Modify plan information.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
      requestBody:
        description: The details required to update a plan.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPlanRequest"
      responses:
        "200":
          description: Successfully updated plan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Plans
        - Business
      summary: Remove Plan
      description: Permanently delete a plan.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
      responses:
        "200":
          description: Successfully removed plan.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /plans/{plan_id}/options:
    post:
      tags:
        - Plans
        - Business
      summary: Add Price Option
      description: Add a new price option to a plan.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
      requestBody:
        description: The details required to create a price option.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostPlanOptionRequest"
      responses:
        "200":
          description: Successfully created plan options.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /plans/{plan_id}/options/{option_id}:
    put:
      tags:
        - Plans
        - Business
      summary: Update Price Option
      description: Modify price option information.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
        - name: option_id
          in: path
          required: true
          schema:
            type: string
            description: The Option ID.
            pattern: "^plo_.*$"
      requestBody:
        description: The details required to update a plan option.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutPlanOptionRequest"
      responses:
        "200":
          description: Successfully updated plan option.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Plans
        - Business
      summary: Modify Price Option
      description: Activate or deactivate a price option.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
        - name: option_id
          in: path
          required: true
          schema:
            type: string
            description: The Option ID.
            pattern: "^plo_.*$"
      responses:
        "200":
          description: Successfully modified plan option.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Plans
        - Business
      summary: Remove Price Option
      description: Remove a price option from a plan.
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            description: The Plan ID.
            pattern: "^pln_.*$"
        - name: option_id
          in: path
          required: true
          schema:
            type: string
            description: The Option ID.
            pattern: "^plo_.*$"
      responses:
        "200":
          description: Successfully removed plan option.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /invoices:
    get:
      tags:
        - Invoices
        - Business
      summary: Get Invoices
      description: Fetch a list of invoices.
      parameters:
        - name: resource_id
          in: query
          required: false
          schema:
            type: string
            description: The ID of the resource you want to filter based on. (e.g. Customer, Subscription or Voucher ID's)
        - name: currency
          in: query
          required: false
          schema:
            type: string
            description: The currency you want to filter based on.
            pattern: ^[A-Z]{3}$
        - name: status
          in: query
          required: false
          schema:
            description: The status you want to filter based on.
            $ref: "#/components/schemas/InvoiceStatus"
        - name: limit
          in: query
          required: false
          schema:
            type: number
            description: The number of invoices to return in the response.
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Successfully retrieved the list of invoices.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      invoices:
                        type: array
                        items:
                          $ref: "#/components/schemas/Invoice"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Invoices
        - Business
      summary: Create Invoice
      description: Create a new invoice.
      requestBody:
        description: The details required to create an invoice.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInvoiceRequest"
      responses:
        "200":
          description: Successfully created invoice.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /invoices/{invoice_id}:
    get:
      tags:
        - Invoices
        - Business
      summary: Get Invoice
      description: Fetch invoice information.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
      responses:
        "200":
          description: Successfully retrieved invoice details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/Invoice"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    put:
      tags:
        - Invoices
        - Business
      summary: Update Invoice
      description: Update invoice information.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
      requestBody:
        description: The details required to update an invoice.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutInvoiceRequest"
      responses:
        "200":
          description: Successfully updated invoice.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Invoices
        - Business
      summary: Remove Invoice
      description: Permanently delete an invoice.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
      responses:
        "200":
          description: Successfully removed invoice.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /invoices/{invoice_id}/send:
    post:
      tags:
        - Invoices
        - Business
      summary: Send Invoice
      description: Send an e-invoice to the customer's email.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
      responses:
        "200":
          description: Successfully sent invoice.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /invoices/{invoice_id}/items:
    post:
      tags:
        - Invoices
        - Business
      summary: Add Line Items
      description: Add new line items to an invoice.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
      requestBody:
        description: The details required to create an invoice item.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInvoiceItemRequest"
      responses:
        "200":
          description: Successfully created invoice items.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /invoices/{invoice_id}/items/{item_id}:
    put:
      tags:
        - Invoices
        - Business
      summary: Update Line Item
      description: Modify line item information.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            description: The Item ID.
            pattern: "^itm_.*$"
      requestBody:
        description: The details required to update an invoice item.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutInvoiceItemRequest"
      responses:
        "200":
          description: Successfully updated invoice item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Invoices
        - Business
      summary: Remove Line Item
      description: Remove a line item from an invoice.
      parameters:
        - name: invoice_id
          in: path
          required: true
          schema:
            type: string
            description: The Invoice ID.
            pattern: "^inv_.*$"
        - name: item_id
          in: path
          required: true
          schema:
            type: string
            description: The Item ID.
            pattern: "^itm_.*$"
      responses:
        "200":
          description: Successfully removed invoice item.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /subscriptions:
    get:
      tags:
        - Subscriptions
        - Business
      summary: Get Subscriptions
      description: Fetch a list of subscriptions.
      parameters:
        - name: resource_id
          in: query
          required: false
          schema:
            type: string
            description: The ID of the resource you want to filter based on. (e.g. Customer or Payment method ID's)
        - name: currency
          in: query
          required: false
          schema:
            type: string
            description: The currency you want to filter based on.
            pattern: ^[A-Z]{3}$
        - name: status
          in: query
          required: false
          schema:
            description: The status you want to filter based on.
            $ref: "#/components/schemas/SubscriptionStatus"
        - name: limit
          in: query
          required: false
          schema:
            type: number
            description: The number of subscriptions to return in the response.
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Successfully retrieved the list of subscriptions.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      subscriptions:
                        type: array
                        items:
                          $ref: "#/components/schemas/Subscription"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Subscriptions
        - Business
      summary: Create Subscription
      description: Create a new subscription.
      requestBody:
        description: The details required to create a subscription.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostSubscriptionRequest"
      responses:
        "200":
          description: Successfully created subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionDataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /subscriptions/{subscription_id}:
    get:
      tags:
        - Subscriptions
        - Business
      summary: Get Subscription
      description: Fetch subscription information.
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
            description: The Subscription ID.
            pattern: "^sub_.*$"
      responses:
        "200":
          description: Successfully retrieved subscription details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  data:
                    $ref: "#/components/schemas/SubscriptionDetails"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Subscriptions
        - Business
      summary: Update Subscription
      description: Enable or Disable subscription auto renewal.
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
            description: The Subscription ID.
            pattern: "^sub_.*$"
      responses:
        "200":
          description: Successfully modified subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Subscriptions
        - Business
      summary: Remove Subscription
      description: Permanently delete a subscription.
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
            description: The Subscription ID.
            pattern: "^sub_.*$"
      responses:
        "200":
          description: Successfully removed subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /subscriptions/{subscription_id}/restore:
    post:
      tags:
        - Subscriptions
        - Business
      summary: Restore Subscription
      description: Restore a subscription that's in a `requires-action` state.
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
            description: The Subscription ID.
            pattern: "^sub_.*$"
      responses:
        "200":
          description: Successfully restored subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /subscriptions/{subscription_id}/cancel:
    post:
      tags:
        - Subscriptions
        - Business
      summary: Cancel Subscription
      description: Cancel a subscription that's in a `active` or `trial` state.
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
            description: The Subscription ID.
            pattern: "^sub_.*$"
      responses:
        "200":
          description: Successfully cancelled subscription.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments:
    get:
      tags:
        - Payments
        - Business
      summary: Get Payments
      description: Fetch a list payments.
      parameters:
        - name: resource_id
          in: query
          required: false
          schema:
            type: string
            description: The ID of the resource you want to filter based on (e.g. Invoice).
        - name: currency
          in: query
          required: false
          schema:
            type: string
            description: The currency you want to filter based on.
            pattern: ^[A-Z]{3}$
        - name: status
          in: query
          required: false
          schema:
            description: The status you want to filter based on.
            $ref: "#/components/schemas/PaymentStatus"
        - name: method
          in: query
          required: false
          schema:
            description: The method you want to filter based on.
            $ref: "#/components/schemas/PaymentSourceType"
        - name: limit
          in: query
          required: false
          schema:
            type: number
            description: The number of payments to return in the response.
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Successfully retrieved the list of payments.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      payments:
                        type: array
                        items:
                          $ref: "#/components/schemas/Payment"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /payments/initiate/{method}:
    post:
      tags:
        - Payments
        - Business
      summary: Initiate Payment
      description: Start a payment operation.
      parameters:
        - name: method
          in: path
          required: true
          schema:
            type: string
            enum:
              - wallet
              - qr
              - card
              - bank
            description: Payment Method.
      requestBody:
        description: The details required to initiate a payment.
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: "#/components/schemas/PostInitiateWalletPaymentRequest"
                - $ref: "#/components/schemas/PostInitiateQrPaymentRequest"
                - $ref: "#/components/schemas/PostInitiateCardPaymentRequest"
                - $ref: "#/components/schemas/PostInitiateBankPaymentRequest"
      responses:
        "200":
          description: Successfully initiated payment.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/WalletPaymentResponse"
                  - $ref: "#/components/schemas/QrPaymentResponse"
                  - $ref: "#/components/schemas/CardPaymentResponse"
                  - $ref: "#/components/schemas/BankPaymentResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /payments/{payment_id}:
    get:
      tags:
        - Payments
        - Business
      summary: Get Payment
      description: Fetch payment information.
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
            description: The Payment ID.
            pattern: "^pmt_.*$"
      responses:
        "200":
          description: Successfully retrieved payment details.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/Payment"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /payments/{payment_id}/refund:
    post:
      tags:
        - Payments
        - Business
      summary: Refund Payment
      description: Refund an approved payment.
      parameters:
        - name: payment_id
          in: path
          required: true
          schema:
            type: string
            description: The Payment ID.
            pattern: "^pmt_.*$"
      requestBody:
        description: The details required to refund a approved payment.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostRefundPaymentRequest"
      responses:
        "200":
          description: Successfully refunded payment.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /providers:
    get:
      tags:
        - Provider Connections
        - Business
      summary: Get Provider Connections
      description: Fetch a list of connected providers.
      responses:
        "200":
          description: Successfully retrieved the list of providers.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      providers:
                        type: array
                        items:
                          $ref: "#/components/schemas/PaymentProvider"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      tags:
        - Provider Connections
        - Business
      summary: Connect Provider
      description: Connect a new provider.
      requestBody:
        description: The details required to connect a provider.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostProviderRequest"
      responses:
        "200":
          description: Successfully connected provider.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DataResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /providers/{connection_id}:
    put:
      tags:
        - Provider Connections
        - Business
      summary: Update Provider Connection
      description: Update connection API credentials.
      parameters:
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
            description: The Provider Connection ID.
            pattern: "^bpc_.*$"
      requestBody:
        description: The provider specific credentials.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutProviderRequest"
      responses:
        "200":
          description: Successfully updated provider connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    patch:
      tags:
        - Provider Connections
        - Business
      summary: Modify Provider Connection
      description: Enable or disable a provider connection.
      parameters:
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
            description: The Provider Connection ID.
            pattern: "^bpc_.*$"
      responses:
        "200":
          description: Successfully modified provider connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      tags:
        - Provider Connections
        - Business
      summary: Remove Provider Connection
      description: Permanently disconnect a provider.
      parameters:
        - name: connection_id
          in: path
          required: true
          schema:
            type: string
            description: The Provider Connection ID.
            pattern: "^bpc_.*$"
      responses:
        "200":
          description: Successfully removed provider connection.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /metrics/invoices:
    get:
      tags:
        - Analytics
        - Business
      summary: Get Invoice Metrics
      description: Fetch invoice metrics.
      responses:
        "200":
          description: Successfully retrieved invoice metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/InvoiceMetrics"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /metrics/subscriptions:
    get:
      tags:
        - Analytics
        - Business
      summary: Get Subscription Metrics
      description: Fetch subscription metrics.
      responses:
        "200":
          description: Successfully retrieved subscription metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/SubscriptionMetrics"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /metrics/payments:
    get:
      tags:
        - Analytics
        - Business
      summary: Get Payment Metrics
      description: Fetch payment metrics.
      responses:
        "200":
          description: Successfully retrieved payment metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/PaymentMetrics"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /metrics/customers:
    get:
      tags:
        - Analytics
        - Business
      summary: Get Customer Metrics
      description: Fetch the customer metrics.
      responses:
        "200":
          description: Successfully retrieved customer metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: "#/components/schemas/CustomerMetrics"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /logs:
    get:
      tags:
        - Logs
      summary: Get Logs
      description: Fetch a list of logs based on a set of filters.
      parameters:
        - name: resource_id
          in: query
          required: false
          schema:
            type: string
            description: The ID of the resource you want to filter based on. If non is provided the API will default to the profile ID.
        - name: method
          in: query
          required: false
          schema:
            type: string
            enum:
              - GET
              - POST
              - PUT
              - PATCH
              - DELETE
            description: The method to filter based on.
        - name: auth_flow
          in: query
          required: false
          schema:
            type: string
            enum:
              - token
              - user
            description: The authentication flow to filter based on.
        - name: limit
          in: query
          required: false
          schema:
            type: number
            description: The number of logs to return in the response.
            minimum: 1
            maximum: 1000
      responses:
        "200":
          description: Successfully retrieved the list of logs.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      logs:
                        type: array
                        items:
                          $ref: "#/components/schemas/AuditLog"
        "4XX":
          description: Client error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "5XX":
          description: Server error.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    # Responses
    BaseResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        message:
          type: string
          description: A descriptive message regarding the result.
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string
          description: A detailed error message.
    DataResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            id:
              type: string
              description: The unique identifier of the newly created resource.
    SessionDataResponse:
      type: object
      properties:
        success:
          type: boolean
          default: true
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            id:
              type: string
              description: The unique identifier of the newly created resource.
            status:
              type: string
              description: The status of the newly created resource.
            session:
              type: object
              default: null
              description: The session details for collecting payment
              properties:
                url:
                  type: string
                  description: The checkout url
                expires_in:
                  type: string
                  description: Session experation time.
    TokenResponse:
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            id:
              type: string
              description: The unique identifier of the token.
              example: tkn_123456
            secret:
              type: string
              description: The secret key of the token. This is not viewable after so make sure to save it somewhere safe.
              example: nafukdsk43nz13kb7gx3qk
    TransferResponse:
      title: Default
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            id:
              type: string
              description: The unique identifier of the transaction.
              example: tra_123456
            status:
              type: string
              description: The current state of the transaction.
              example: pending-approval
    TransferBatchResponse:
      title: Batch
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            transfers:
              type: array
              items:
                $ref: "#/components/schemas/TransferResponse"
    WalletPaymentResponse:
      title: Wallet
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            session:
              type: string
              example: https://app.paisr.tech/pay/ey7bTCm6tur63CR6mzbuq23r
              description: The url to redirect the customer to for collecting payment.
            expires_in:
              type: string
              example: 30 Minutes
              description: The session expiration time.
    QrPaymentResponse:
      title: QR
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            id:
              type: string
              description: The unique identifier of the payment.
              example: pmt_123456
            status:
              type: string
              description: The current state of the payment.
              example: pending
            metadata:
              type: object
              properties:
                provider:
                  type: string
                  description: The slug of the QR provider.
                qr_code:
                  type: string
                  description: The code used to generate the QR image.
                deep_link:
                  type: string
                  description: The url for in-app payments.
    CardPaymentResponse:
      title: Card
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            id:
              type: string
              description: The unique identifier of the payment.
              example: pmt_123456
            status:
              type: string
              enum:
                - failed
                - approved
              description: The current state of the payment.
              example: approved
    BankPaymentResponse:
      title: Bank
      type: object
      properties:
        success:
          type: boolean
          description: Indicates if the request was successful.
        data:
          type: object
          properties:
            session:
              type: string
              example: https://example.bank.com/pay/ey7bTCm6tur63CR6mzbuq23r
              description: The url to redirect the customer to for collecting payment.
            expires_in:
              type: string
              example: 30 Minutes
              description: The session expiration time.

    # Enums
    WalletType:
      type: string
      enum:
        - fiat
        - crypto
      example: fiat
      description: Type of wallet.
    WalletIconType:
      type: string
      enum:
        - bitcoin
        - blend
        - dollar-sign
        - flame
        - gem
        - headset
        - heart
        - infinity
        - landmark
        - leaf
        - piggy-bank
        - pyramid
        - snowflake
        - sparkles
        - tree-palm
        - trophy
        - vault
        - wallet
        - zap
      example: wallet
      description: Custom icon of the wallet
    WalletBalanceType:
      type: string
      enum:
        - primary
        - saving
        - investment
      example: primary
      description: Type of balance.
    WalletAccountType:
      type: string
      enum:
        - checking
        - saving
      example: checking
      description: Type of account.

    RateType:
      type: string
      enum:
        - percentage
        - fixed
      example: percentage
      description: The applicable rate type.
    CurrencyType:
      type: string
      enum:
        - SRD
        - USD
        - EUR
      example: SRD
      description: Currency code in ISO 4217 format.
    CountryType:
      type: string
      enum:
        - AG
        - AW
        - BS
        - BB
        - BM
        - CW
        - DM
        - GD
        - GY
        - JM
        - KN
        - LC
        - VC
        - SR
        - TT
      example: SR
      description: Currency code in ISO 3166-1 alpha-2 format.
    BankSwiftType:
      type: string
      enum:
        - SURBSRPA
        - FBNASRPA
        - GODOSRPA
        - HAKRSRPA
        - RBNKSRPA
        - SOUOSRPP
      example: SOUOSRPP
      description: Swift Code / BIC of the bank.
    PaymentProviderType:
      type: string
      enum:
        - pcb
        - pbb
        - card
        - uni5pay
      example: card
      description: Unique slug for the provider.

    InvoiceStatus:
      type: string
      enum:
        - draft
        - unpaid
        - paid
        - void
      example: "paid"
    SubscriptionStatus:
      type: string
      enum:
        - pending
        - expired
        - trial
        - active
        - suspended
        - cancelled
      example: "active"

    PaymentStatus:
      type: string
      enum:
        - pending
        - failed
        - approved
        - settled
        - refunded
        - cancelled
      example: "approved"
    PaymentSourceType:
      type: string
      enum:
        - wallet
        - qr
        - card
        - bank
        - other
      example: "wallet"

    # Data Schemas
    PaymentMetricStatusSummary:
      type: object
      properties:
        count:
          type: number
          example: 3
        currencies:
          type: array
          example: ["SRD", "USD", "EUR"]
          properties:
            code:
              type: string
            total:
              type: number

    AuditLog:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        method:
          type: string
          enum:
            - GET
            - PUT
            - POST
            - PATCH
            - DELETE
          example: POST
        route:
          type: string
          example: /v2/wallets
        user_agent:
          type: string
          example: PostmanRuntime
        response:
          type: object
          properties:
            status:
              type: number
              example: 200
            body:
              type: object
        auth:
          type: object
          properties:
            flow:
              type: string
              enum:
                - token
                - user
              example: token
            uuid:
              type: string
              example: tkn_123456

    AccessToken:
      type: object
      properties:
        id:
          type: string
          example: tkn_123456
        description:
          type: string
          example: Postman
        permissions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: tpm_12345
              type:
                type: string
                example: invoices.read
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
          example: tem_123456
        expires_at:
          type: string
          format: date-time

    Webhook:
      type: object
      properties:
        id:
          type: string
          example: whk_123456
        description:
          type: string
          example: Checkout Callback
        endpoint:
          type: string
          format: url
          example: https://api.example.com/callback
        paused:
          type: boolean
          example: false
        triggers:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: wtr_12345
              type:
                type: string
                example: invoice.paid
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
          example: tem_123456
    WebhookStats:
      type: object
      properties:
        success:
          type: number
          example: 10
        failed:
          type: number
          example: 2
        pending:
          type: number
          example: 0
    WebhookSecret:
      type: object
      properties:
        secret:
          type: string
          example: ey7bTCm6tur63CR6mzbuq23r
    WebhookEvent:
      type: object
      properties:
        id:
          type: string
          example: wev_123456
        body:
          type: object
          properties:
            id:
              type: string
              example: inv_123456
            event:
              type: string
              example: invoice.paid
        status:
          type: string
          enum:
            - pending
            - success
            - failed
          example: success
        type:
          type: string
          example: invoice.paid
        can_retry:
          type: boolean
        retry_count:
          type: number
          example: 0
        last_retry_at:
          type: string
          format: date-time
        next_retry_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    Wallet:
      type: object
      properties:
        id:
          type: string
          example: buw_123456
        beneficiary:
          properties:
            name:
              type: string
              example: Acme Inc
            email:
              type: string
              example: finance@acme.com
        profile:
          properties:
            nickname:
              type: string
              example: Acme
            tag:
              type: string
              example: acmeinc
            public:
              type: boolean
        icon:
          type: string
          example: vault
        title:
          type: string
          example: Cash Wallet
        locked:
          type: boolean
          example: false
        default:
          type: boolean
          example: true
        type:
          $ref: "#/components/schemas/WalletType"
        sub_type:
          type: string
          enum:
            - personal
            - business
          example: business
        usage:
          properties:
            transfers:
              type: object
              properties:
                current:
                  type: number
                  format: float
                  example: 3598.75
                max:
                  type: number
                  format: float
                  example: 25000
            deposits:
              type: object
              properties:
                current:
                  type: number
                  format: float
                  example: 550
                max:
                  type: number
                  format: float
                  example: 5000
            withdrawals:
              type: object
              properties:
                current:
                  type: number
                  format: float
                  example: 4075
                max:
                  type: number
                  format: float
                  example: 25000
            resets_at:
              type: string
              format: date-time
        created_at:
          type: string
          format: date-time
    WalletPin:
      type: object
      properties:
        secret:
          type: string
          example: "5719"
    WalletBalance:
      type: object
      properties:
        id:
          type: string
          example: bca_123456
        title:
          type: string
          example: SRD Balance
        currency:
          type: object
          properties:
            code:
              $ref: "#/components/schemas/CurrencyType"
            symbol:
              type: string
              example: $
        balance:
          type: object
          properties:
            running:
              type: number
              format: float
              example: 2802.75
            holding:
              type: number
              format: float
              example: 0
        frozen:
          type: boolean
          example: false
        type:
          $ref: "#/components/schemas/WalletBalanceType"
        treasurer:
          type: object
          default: {}
          properties:
            name:
              type: string
              example: PAISR Treasury
            iban:
              type: string
              example: ABC123456789
            type:
              type: string
              example: checking
            bank:
              type: object
              properties:
                name:
                  type: string
                  example: Southern Commercial Bank
                swift:
                  $ref: "#/components/schemas/BankSwiftType"
        created_at:
          type: string
          format: date-time
    WalletAccount:
      type: object
      properties:
        id:
          type: string
          example: cwa_123456
        account_holder:
          type: string
          example: John Doe
        account_number:
          type: string
          example: "123456789"
        account_type:
          $ref: "#/components/schemas/WalletAccountType"
        currency:
          $ref: "#/components/schemas/CurrencyType"
        verified:
          type: boolean
        bank:
          type: object
          properties:
            name:
              type: string
              example: Southern Commercial Bank
            swift_code:
              $ref: "#/components/schemas/BankSwiftType"
        created_at:
          type: string
          format: date-time
    WalletContact:
      type: object
      properties:
        id:
          type: string
          example: fav_123456
        full_name:
          type: string
          example: Jane Smith
        nickname:
          type: string
          example: Jane
        tag:
          type: string
          example: janesmith
        avatar:
          type: string
          example: https://gravatar.com/avatars/uhofasobobao
        created_at:
          type: string
          format: date-time
    WalletPaymentLink:
      type: object
      properties:
        id:
          type: string
          example: wpr_123456
        description:
          type: string
          example: Plant a tree initiative
        currency:
          $ref: "#/components/schemas/CurrencyType"
        amount:
          type: number
          format: float
          example: 25.00
        balance:
          type: object
          properties:
            id:
              type: string
              example: bca_123456
            title:
              type: string
              example: SRD Balance
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
    WalletStatement:
      type: object
      properties:
        id:
          type: string
          example: wst_123456
        timeline:
          type: string
          example: November 2023
        source:
          type: string
        created_at:
          type: string
          format: date-time
    WalletPayTransaction:
      title: E-Commerce
      type: object
      properties:
        id:
          type: string
          example: tra_123456
        type:
          type: string
          enum:
            - debit
          example: debit
        method:
          type: string
          enum:
            - EcomPay
        status:
          type: string
          enum:
            - processing
            - settled
          example: settled
        destination:
          type: object
          properties:
            name:
              type: string
              example: Acme Inc
        quote:
          type: object
          properties:
            base:
              type: object
              properties:
                total:
                  type: number
                  format: float
                  example: 100.0
                currency:
                  type: string
                  example: SRD
            tax:
              type: object
              properties:
                collected:
                  type: boolean
                country:
                  type: string
                  example: SR
                type:
                  type: string
                  example: VAT
                rate:
                  type: number
                  format: float
                  example: 0.10
                total:
                  type: number
                  format: float
                  example: 10.0
            due:
              type: object
              properties:
                total:
                  type: number
                  format: float
                  example: 110.0
                currency:
                  type: string
                  example: SRD
        reference:
          type: string
          example: "Payment for Invoice #199027"
        balance_before:
          type: number
          example: 75.00
        balance_after:
          type: number
          example: 50.00
        created_at:
          type: string
          format: date-time
        processed_at:
          type: string
          format: date-time
    WalletOutboundTransaction:
      title: Outbound
      type: object
      properties:
        id:
          type: string
          example: tra_123456
        type:
          type: string
          enum:
            - debit
          example: debit
        method:
          type: string
          enum:
            - P2P
            - A2A
            - ACH
          example: P2P
        status:
          type: string
          enum:
            - pending
            - processing
            - settled
            - requires-approval
            - cancelled
          example: processing
        destination:
          type: object
          properties:
            name:
              type: string
              example: Jane Smith
        quote:
          type: object
          properties:
            base:
              type: object
              properties:
                total:
                  type: number
                  format: float
                  example: 100.0
                currency:
                  type: string
                  example: SRD
            tax:
              type: object
              properties:
                collected:
                  type: boolean
                  example: false
                country:
                  type: string
                  example: SR
                type:
                  type: string
                  example: VAT
                rate:
                  type: number
                  format: float
                  example: 0
                total:
                  type: number
                  format: float
                  example: 0
            fee:
              type: object
              properties:
                conversion:
                  type: object
                  properties:
                    rate:
                      type: number
                      format: float
                      example: 0
                    total:
                      type: number
                      format: float
                      example: 0
                interchange:
                  type: object
                  properties:
                    rate:
                      type: number
                      format: float
                      example: 0
                    total:
                      type: number
                      format: float
                      example: 0
                total:
                  type: number
                  format: float
                  example: 0
            due:
              type: object
              properties:
                total:
                  type: number
                  format: float
                  example: 100
                currency:
                  type: string
                  example: SRD
            conversion:
              type: object
              properties:
                input:
                  type: number
                  format: float
                  example: 100
                from:
                  type: string
                  example: SRD
                to:
                  type: string
                  example: SRD
                rate:
                  type: number
                  format: float
                  example: 1
                total:
                  type: number
                  format: float
                  example: 100.0
            output:
              type: object
              properties:
                total:
                  type: number
                  format: float
                  example: 100.0
                currency:
                  type: string
                  example: SRD
        reference:
          type: string
          example: For services renderred
        balance_before:
          type: number
          example: 75.00
        balance_after:
          type: number
          example: 50.00
        created_at:
          type: string
          format: date-time
        processed_at:
          type: string
          format: date-time
    WalletInboundTransaction:
      title: Inbound
      type: object
      properties:
        id:
          type: string
          example: tra_123456
        type:
          type: string
          enum:
            - credit
          example: credit
        method:
          type: string
          enum:
            - P2P
            - A2A
            - TopUp
            - Payout
        status:
          type: string
          enum:
            - settled
          example: settled
        source:
          type: object
          properties:
            name:
              type: string
        quote:
          type: object
          properties:
            output:
              type: object
              properties:
                total:
                  type: number
                  format: float
                currency:
                  type: string
        reference:
          type: string
        balance_before:
          type: number
          example: 0.00
        balance_after:
          type: number
          example: 75.00
        created_at:
          type: string
          format: date-time
        processed_at:
          type: string
          format: date-time

    Customer:
      type: object
      properties:
        id:
          type: string
          example: cus_123456
        name:
          type: string
          example: Jane Smith
        email:
          type: string
          example: jane@example.com
        phone:
          type: string
          example: "+597-8123456"
        default_currency:
          $ref: "#/components/schemas/CurrencyType"
        billing_details:
          default: null
          $ref: "#/components/schemas/CustomerBillingDetails"
        shipping_details:
          default: null
          $ref: "#/components/schemas/CustomerShippingDetails"
        metadata:
          type: object
          default: null
        session:
          type: object
          properties:
            url:
              type: string
              example: https://portal.checkout.paisr.tech/ey7bTCm6tur63CR6mzbuq23r
            expires_in:
              type: string
              example: 30 minutes
        created_at:
          type: string
          format: date-time
    CustomerPreview:
      type: object
      properties:
        id:
          type: string
          example: cus_123456
        name:
          type: string
          example: Jane Smith
        email:
          type: string
          example: jane@example.com
        billing_details:
          default: null
          $ref: "#/components/schemas/CustomerBillingDetails"
        shipping_details:
          default: null
          $ref: "#/components/schemas/CustomerShippingDetails"
    CustomerBillingDetails:
      type: object
      required:
        - line_1
        - city
        - country
      properties:
        line_1:
          type: string
          example: Example Street 10
        line_2:
          type: string
          example: Example Street 11
        city:
          type: string
          example: Paramaribo
        state:
          type: string
          example: Kwatta
        zip_code:
          type: string
        country:
          type: string
          example: SR
    CustomerShippingDetails:
      type: object
      required:
        - name
        - line_1
        - city
        - country
      properties:
        name:
          type: string
          example: Jane Smith
        phone:
          type: string
          example: "+597-8123456"
        line_1:
          type: string
          example: Example Street 10
        line_2:
          type: string
          example: Example Street 11
        city:
          type: string
          example: Paramaribo
        state:
          type: string
          example: Kwatta
        zip_code:
          type: string
        country:
          type: string
          example: SR
    CustomerProviderPreview:
      title: Provider
      type: object
      properties:
        id:
          type: string
          example: pmt_123456
        type:
          type: string
          enum:
            - credits
            - wallet
          example: wallet
        provider:
          type: string
          example: Paisr Pay
    CustomerCardPreview:
      title: Card
      type: object
      properties:
        id:
          type: string
          example: pmt_123456
        type:
          type: string
          enum:
            - card
          default: card
          example: card
        last_four:
          type: string
          example: "4242"
        brand:
          type: string
          example: visa

    Voucher:
      type: object
      properties:
        id:
          type: string
          example: vch_123456
        description:
          type: string
          example: End of the month sale
        type:
          $ref: "#/components/schemas/RateType"
        code:
          type: string
          example: EOTM10
        amount:
          type: number
          format: float
          example: 10
        redeems:
          type: object
          properties:
            count:
              type: number
              example: 75
            max:
              type: number
              example: 100
        archived:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time

    Plan:
      type: object
      properties:
        id:
          type: string
          example: pln_123456
        title:
          type: string
          example: Premium Service
        summary:
          type: string
          example: Get started with using our premium service.
        type:
          type: string
          enum:
            - standard
            - metered
          default: standard
          example: standard
        currency:
          $ref: "#/components/schemas/CurrencyType"
        created_at:
          type: string
          format: date-time
        options:
          type: array
          items:
            $ref: "#/components/schemas/PlanOption"
    PlanOption:
      type: object
      properties:
        id:
          type: string
          example: plo_123456
        description:
          type: string
          example: Monthly
        active:
          type: boolean
          default: true
          example: true
        unit_price:
          type: number
          example: 9.99
        billing_interval:
          type: number
          example: 30
        trial_period:
          type: number
          example: 0
        subscribers:
          type: number
          example: 10
        attributes:
          type: object
        created_at:
          type: string
          format: date-time
    PlanLineOption:
      type: object
      required:
        - description
        - unit_price
        - billing_interval
      properties:
        description:
          type: string
          description: Short description about the option.
        unit_price:
          type: number
          format: float
          minimum: 0.01
          description: Price per unit.
        billing_interval:
          type: number
          minimum: 1
          maximum: 365
          description: The number of days for each billing interval. (e.g. 30 for monthly or 365 for yearly)
        trial_period:
          type: number
          minimum: 0
          maximum: 365
          description: The number of days before the first billable invoice is due.
        attributes:
          type: object
          maxProperties: 16
          description: Custom key-value pairs that can be used for option specific features.

    Invoice:
      type: object
      properties:
        id:
          type: string
          example: inv_123456
        sid:
          type: number
          example: 600783
        subscription_id:
          type: string
          example: sub_123456
        customer:
          $ref: "#/components/schemas/CustomerPreview"
        voucher:
          type: object
          properties:
            id:
              type: string
              example: vch_123456
            type:
              $ref: "#/components/schemas/RateType"
            rate:
              type: number
              format: float
              example: 10
        summary:
          type: string
          example: A simple pizza order
        amount:
          type: object
          properties:
            sub_total:
              type: number
              format: float
              example: 150
            discount_total:
              type: number
              format: float
              example: 15
            net_total:
              type: number
              format: float
              example: 135
        status:
          $ref: "#/components/schemas/InvoiceStatus"
        currency:
          $ref: "#/components/schemas/CurrencyType"
        session:
          type: object
          properties:
            url:
              type: string
              example: https://checkout.paisr.tech/ey7bTCm6tur63CR6mzbuq23r
            expires_in:
              type: string
              example: 30 minutes
        due_at:
          type: string
          format: date-time
        paid_at:
          type: string
          format: date-time
        void_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    InvoiceDetails:
      type: object
      properties:
        id:
          type: string
          example: inv_123456
        sid:
          type: number
          example: 600783
        subscription_id:
          type: string
          example: sub_123456
        customer:
          $ref: "#/components/schemas/CustomerPreview"
        voucher:
          type: object
          properties:
            id:
              type: string
              example: vch_123456
            type:
              $ref: "#/components/schemas/RateType"
            rate:
              type: number
              format: float
              example: 10
        summary:
          type: string
          example: A simple pizza order
        amount:
          type: object
          properties:
            sub_total:
              type: number
              format: float
              example: 150
            discount_total:
              type: number
              format: float
              example: 15
            net_total:
              type: number
              format: float
              example: 135
        status:
          $ref: "#/components/schemas/InvoiceStatus"
        currency:
          $ref: "#/components/schemas/CurrencyType"
        session:
          type: object
          properties:
            url:
              type: string
              example: https://checkout.paisr.tech/ey7bTCm6tur63CR6mzbuq23r
            expires_in:
              type: string
              example: 30 minutes
        due_at:
          type: string
          format: date-time
        paid_at:
          type: string
          format: date-time
        void_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/InvoiceItem"
    InvoiceItem:
      type: object
      properties:
        id:
          type: string
          example: itm_123456
        description:
          type: string
          example: Small Pizza
        quantity:
          type: number
          example: 2
        total:
          type: object
          properties:
            unit:
              type: number
              format: float
              example: 75
            calculated:
              type: number
              format: float
              example: 150
        created_at:
          type: string
          format: date-time
    InvoiceLineItem:
      type: object
      required:
        - description
        - quantity
        - unit_price
      properties:
        description:
          type: string
          description: Detailed description about the item.
        quantity:
          type: number
          minimum: 1
          description: Number of units.
        unit_price:
          type: number
          format: float
          minimum: 0
          description: Price per unit.

    Subscription:
      type: object
      properties:
        id:
          type: string
          example: sub_123456
        customer:
          $ref: "#/components/schemas/CustomerPreview"
        payment_method:
          oneOf:
            - $ref: "#/components/schemas/CustomerProviderPreview"
            - $ref: "#/components/schemas/CustomerCardPreview"
        status:
          $ref: "#/components/schemas/SubscriptionStatus"
        currency:
          $ref: "#/components/schemas/CurrencyType"
        auto_renew:
          type: boolean
          example: true
        trial_start:
          type: string
          format: date-time
        trial_end:
          type: string
          format: date-time
        billing_interval:
          type: number
          example: 30
        billing_start:
          type: string
          format: date-time
        billing_end:
          type: string
          format: date-time
        last_renew_at:
          type: string
          format: date-time
        next_renew_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
    SubscriptionDetails:
      type: object
      properties:
        id:
          type: string
          example: sub_123456
        customer:
          $ref: "#/components/schemas/CustomerPreview"
        payment_method:
          oneOf:
            - $ref: "#/components/schemas/CustomerProviderPreview"
            - $ref: "#/components/schemas/CustomerCardPreview"
        status:
          $ref: "#/components/schemas/InvoiceStatus"
        currency:
          $ref: "#/components/schemas/CurrencyType"
        auto_renew:
          type: boolean
          example: true
        trial_start:
          type: string
          format: date-time
        trial_end:
          type: string
          format: date-time
        billing_interval:
          type: number
          example: 30
        billing_start:
          type: string
          format: date-time
        billing_end:
          type: string
          format: date-time
        last_renew_at:
          type: string
          format: date-time
        next_renew_at:
          type: string
          format: date-time
        cancelled:
          type: boolean
          example: true
        cancelled_at:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
        line_items:
          type: array
          items:
            $ref: "#/components/schemas/SubscriptionItem"
    SubscriptionItem:
      type: object
      properties:
        id:
          type: string
          example: stm_123456
        title:
          type: string
          example: Premium Service - Monthly
        quantity:
          type: number
          example: 1
        option:
          type: object
          properties:
            id:
              type: string
              example: plo_123456
            plan_id:
              type: string
              example: pln_123456
            available:
              type: boolean
              example: true
            unit_price:
              type: number
              format: float
              example: 9.99
        created_at:
          type: string
          format: date-time
    SubscriptionLineItem:
      type: object
      required:
        - option_id
        - quantity
      properties:
        option_id:
          type: string
          description: The ID of the plan option to subscribe to.
        quantity:
          type: number
          minimum: 1
          description: Number of units.

    Payment:
      type: object
      properties:
        id:
          type: string
          example: pmt_123456
        sid:
          type: number
          example: 680297
        invoice_id:
          type: string
          example: inv_123456
        description:
          type: string
          example: "Payment for Invoice #600783"
        currency:
          $ref: "#/components/schemas/CurrencyType"
        status:
          $ref: "#/components/schemas/PaymentStatus"
        payment_method:
          type: object
          properties:
            provider:
              type: string
              example: Paisr Pay
            type:
              $ref: "#/components/schemas/PaymentSourceType"
        amount:
          type: object
          properties:
            sub_total:
              type: number
              format: float
              example: 135
            tax:
              type: object
              properties:
                rate:
                  type: number
                  format: float
                  example: 0
                type:
                  $ref: "#/components/schemas/RateType"
                total:
                  type: number
                  format: float
                  example: 0
            due_total:
              type: number
              format: float
              example: 135
            fee_total:
              type: number
              format: float
              example: 2.56
            output_total:
              type: number
              format: float
              example: 132.44
        billing_details:
          type: object
          properties:
            name:
              type: string
              example: Jane Smith
            phone:
              type: string
              example: "5978123456"
            line_1:
              type: string
              example: Example Street 10
            line_2:
              type: string
              example: Example Street 11
            city:
              type: string
              example: Paramaribo
            state:
              type: string
              example: Kwatta
            zip_code:
              type: string
            country:
              type: string
              example: SR
        notes:
          type: string
          default: null
        metadata:
          type: object
          default: null
        initiated_at:
          type: string
          format: date-time
        approved_at:
          type: string
          format: date-time
        settled_at:
          type: string
          default: null
          format: date-time
        cancelled_at:
          type: string
          default: null
          format: date-time
        cancelled_by:
          type: string
          default: null
        reversed_at:
          type: string
          default: null
          format: date-time
        reversed_by:
          type: string
          default: null
    PaymentBillingDetails:
      type: object
      required:
        - full_name
        - country
      description: Billing details of the customer.
      properties:
        name:
          type: string
          description: The name of the customer that will appear on receipts.
        phone:
          type: string
          format: tel
          description: The phone number of the customer. (eg +5978123456)
        line_1:
          type: string
          description: Billing address of the customer.
        line_2:
          type: string
          description: Billing address of the customer.
        city:
          type: string
          description: City name.
        state:
          type: string
          description: State name.
        zip_code:
          type: string
          description: ZIP Code.
        country:
          type: string
          description: Country code in ISO 3166-1 alpha-2 format.

    PaymentProvider:
      type: object
      properties:
        id:
          type: string
          example: bpc_123456
        name:
          type: string
          example: Paisr Pay
        description:
          type: string
          example: The fastest way to make payments in the Caribbean.
        logo:
          type: string
        type:
          type: string
          example: wallet
        connector:
          type: object
          properties:
            status:
              type: string
              enum:
                - enabled
                - disabled
              example: enabled
            slug:
              $ref: "#/components/schemas/PaymentProviderType"
            available:
              type: boolean
              example: true
            built_in:
              type: boolean
              example: true
            supported_currencies:
              type: array
              items:
                type: string
                example: ["SRD", "USD", "EUR"]
        metadata:
          type: object
        created_at:
          type: string
          format: date-time

    InvoiceMetrics:
      type: object
      properties:
        total:
          type: number
          example: 49
        unpaid:
          type: number
          example: 9
        paid:
          type: number
          example: 40
    SubscriptionMetrics:
      type: object
      properties:
        total:
          type: number
          example: 67
        pending:
          type: number
          example: 9
        active:
          type: number
          example: 40
        trial:
          type: number
          example: 5
        suspended:
          type: number
          example: 3
        expired:
          type: number
          example: 6
        cancelled:
          type: number
          example: 4
    PaymentMetrics:
      type: object
      properties:
        total:
          type: number
          example: 15
        pending:
          $ref: "#/components/schemas/PaymentMetricStatusSummary"
        approved:
          $ref: "#/components/schemas/PaymentMetricStatusSummary"
        settled:
          $ref: "#/components/schemas/PaymentMetricStatusSummary"
        failed:
          $ref: "#/components/schemas/PaymentMetricStatusSummary"
        cancelled:
          $ref: "#/components/schemas/PaymentMetricStatusSummary"
        refunded:
          $ref: "#/components/schemas/PaymentMetricStatusSummary"
    CustomerMetrics:
      type: object
      properties:
        total:
          type: number
          example: 24

    # Request Schemas
    PostAccessTokenRequest:
      type: object
      required:
        - description
        - scopes
      properties:
        description:
          type: string
          description: Clear description on the token use case.
          example: Postman
          pattern: ^[a-zA-Z0-9() ]{4,48}$
        scopes:
          type: array
          description: List scopes to attach to the token.
          minItems: 1
          items:
            type: string
            example: invoices.read
    PutAccessTokenRequest:
      type: object
      required:
        - description
      properties:
        description:
          type: string
          description: Clear description on the token use case.
          example: Postman
          pattern: ^[a-zA-Z0-9() ]{4,48}$
    PostAccessTokenPermissionRequest:
      type: object
      required:
        - scopes
      properties:
        scopes:
          type: array
          description: List of scopes to attach to the token.
          minItems: 1
          items:
            type: string

    # Profile Webhooks
    PostWebhookRequest:
      type: object
      required:
        - description
        - endpoint
        - events
      properties:
        description:
          type: string
          description: Clear description on the webhook use case.
          example: Checkout Callback
          pattern: ^[a-zA-Z0-9() ]{4,48}$
        endpoint:
          type: string
          format: url
          description: Full url of the webhook.
          example: https://my-checkout.com/callback
        events:
          type: array
          description: List of events to attach to the webhook.
          minItems: 1
          items:
            type: string
            example: invoice.paid
    PutWebhookRequest:
      type: object
      properties:
        description:
          type: string
          description: Clear description on the webhook use case.
          example: Checkout Callback
          pattern: ^[a-zA-Z0-9() ]{4,48}$
        endpoint:
          type: string
          format: url
          description: Full url of the webhook.
          example: https://my-checkout.com/callback
    PostWebhookTriggerRequest:
      type: object
      required:
        - events
      properties:
        events:
          type: array
          description: List of events to attach to the webhook.
          minItems: 1
          items:
            type: string

    # Wallets
    PostWalletRequest:
      type: object
      properties:
        title:
          type: string
          description: Short title or name for the wallet.
          example: Acme Cash
          pattern: ^[a-zA-Z0-9 ]{6,48}$
        icon:
          $ref: "#/components/schemas/WalletIconType"
    PatchWalletRequest:
      type: object
      properties:
        title:
          type: string
          description: Short title or name for the wallet.
          example: Acme Cash
          pattern: ^[a-zA-Z0-9 ]{6,48}$
        icon:
          $ref: "#/components/schemas/WalletIconType"
        email:
          type: string
          format: email
          description: Email address for email notifications. (Only available on business wallets)
          example: notifications@acme.com
    PutWalletRequest:
      type: object
      properties:
        nickname:
          type: string
          description: Short nickname.
          example: Acme Finance
          pattern: ^[a-zA-Z0-9 ]{6,48}$
        tag:
          type: string
          description: Unique tag used for transfer purposes.
          example: acmefinance
          pattern: ^[a-z0-9]{6,48}$
        public:
          type: boolean
          description: Flag indicating if wallet is discoverable by other users.
          example: true

    PostWalletBalanceRequest:
      type: object
      required:
        - title
        - currency
        - type
      properties:
        title:
          type: string
          description: Short title or name for the balance.
          example: SRD Revenue
          pattern: ^[a-zA-Z0-9 ]{6,48}$
        currency:
          $ref: "#/components/schemas/CurrencyType"
        type:
          $ref: "#/components/schemas/WalletBalanceType"
    PutWalletBalanceRequest:
      type: object
      required:
        - title
      properties:
        title:
          type: string
          description: Short title or name for the balance.
          example: SRD Revenue
          pattern: ^[a-zA-Z0-9 ]{6,48}$

    PostWalletAccountRequest:
      type: object
      required:
        - account_holder
        - account_number
        - account_type
        - swift_code
        - currency
      properties:
        account_holder:
          type: string
          description: Full account holder name.
        account_number:
          type: string
          description: Full account number / IBAN.
        account_type:
          $ref: "#/components/schemas/WalletAccountType"
        swift_code:
          $ref: "#/components/schemas/BankSwiftType"
        currency:
          $ref: "#/components/schemas/CurrencyType"
    PatchWalletAccountRequest:
      type: object
      required:
        - code
      properties:
        code:
          type: string
          description: Six digit verification code.
          minLength: 6
          maxLength: 6

    PostWalletContactRequest:
      type: object
      required:
        - tag
      properties:
        tag:
          type: string
          description: Unique tag of the wallet.

    PostWalletPaymentLinkRequest:
      type: object
      required:
        - balance_id
        - description
        - amount
      properties:
        balance_id:
          type: string
          description: ID of the wallet balance to transfer funds.
        description:
          type: string
          description: Detailed description about the payment link.
        amount:
          type: number
          format: float
          description: Amount to transfer.
    PutWalletPaymentLinkRequest:
      type: object
      properties:
        description:
          type: string
          description: Detailed description about the payment link.
        amount:
          type: number
          format: float
          description: Amount to transfer.

    # Transfers
    PostMoveTransferRequest:
      title: Move
      type: object
      required:
        - source
        - destination
        - amount
      properties:
        source:
          type: string
          description: Source balance ID.
        destination:
          type: string
          description: Destination balance ID.
        amount:
          type: number
          format: float
          description: Amount to transfer.
    PostPeerTransferRequest:
      title: Peer
      type: object
      required:
        - source
        - destination
        - amount
        - reference
      properties:
        source:
          type: string
          description: Source balance ID.
        destination:
          type: string
          description: Contact ID or unique tag of the recipient wallet.
        amount:
          type: number
          format: float
          description: Amount to transfer.
        reference:
          type: string
          description: Summary about the transfer.
    PostBankTransferRequest:
      title: Bank
      type: object
      required:
        - source
        - destination
        - amount
        - reference
      properties:
        source:
          type: string
          description: Source balance ID.
        destination:
          type: string
          description: Wallet account ID.
        amount:
          type: number
          format: float
          description: Amount to transfer.
        reference:
          type: string
          description: Summary about the transfer.
    PostBatchTransferRequest:
      title: Batch
      type: object
      required:
        - transfers
      properties:
        transfers:
          type: array
          items:
            type: object
            required:
              - method
              - details
            properties:
              method:
                type: string
                enum:
                  - peer
                  - bank
                  - move
                example: peer
              details:
                oneOf:
                  - $ref: "#/components/schemas/PostMoveTransferRequest"
                  - $ref: "#/components/schemas/PostPeerTransferRequest"
                  - $ref: "#/components/schemas/PostBankTransferRequest"
    PostApproveTransferRequest:
      type: object
      required:
        - pin
      properties:
        pin:
          type: string
          description: Source wallet PIN.
    PostCancelTransferRequest:
      type: object
      required:
        - note
      properties:
        note:
          type: string
          description: Reason for cancellation.

    # Customers
    PostCustomerRequest:
      type: object
      required:
        - email
      properties:
        name:
          type: string
          description: The name of the customer.
        email:
          type: string
          format: email
          description: The email address of the customer.
        phone:
          type: string
          format: tel
          description: The phone number of the customer. (eg +597-8123456)
        default_currency:
          description: Default currency to apply on all new invoices of the customer.
          $ref: "#/components/schemas/CurrencyType"
        billing_details:
          description: The billing details of the customer
          $ref: "#/components/schemas/CustomerBillingDetails"
        shipping_details:
          description: The shipping details of the customer
          $ref: "#/components/schemas/CustomerBillingDetails"
        metadata:
          type: object
          description: Up to 5 custom key-value pair
    PutCustomerRequest:
      type: object
      properties:
        name:
          type: string
          description: The name of the customer.
        email:
          type: string
          format: email
          description: The email address of the customer.
        phone:
          type: string
          format: tel
          description: The phone number of the customer. (eg +597-8123456)
        default_currency:
          description: Default currency to apply on all new invoices of the customer.
          $ref: "#/components/schemas/CurrencyType"
        billing_details:
          description: The billing details of the customer
          $ref: "#/components/schemas/CustomerBillingDetails"
        shipping_details:
          description: The shipping details of the customer
          $ref: "#/components/schemas/CustomerBillingDetails"
        metadata:
          type: object
          description: Up to 5 custom key-value pair

    # Vouchers
    PostVoucherRequest:
      type: object
      required:
        - description
        - type
        - code
        - amount
        - max_redeems
        - expires
      properties:
        description:
          type: string
          description: Short description about the voucher.
        type:
          $ref: "#/components/schemas/RateType"
        code:
          type: string
          description: Unique code that will be shared with customers.
        amount:
          type: number
          format: float
          minimum: 1
          description: Discount amount.
        max_redeems:
          type: number
          minimum: 1
          maximum: 1000000
          description: Max number of redeems.
        expires:
          type: string
          description: Expiration date in relative time. (e.g. 'In 3 days')
    PutVoucherRequest:
      type: object
      properties:
        description:
          type: string
          description: Short description about the voucher.
        type:
          $ref: "#/components/schemas/RateType"
        code:
          type: string
          description: Unique code that will be shared with customers.
        amount:
          type: number
          format: float
          minimum: 1
          description: Discount amount.
        max_redeems:
          type: number
          minimum: 1
          maximum: 1000000
          description: Max number of redeems.
        expires:
          type: string
          description: Expiration date in relative time. (e.g. 'In 3 days')
    PostApplyVoucherRequest:
      type: object
      required:
        - invoice_id
        - code
      properties:
        invoice_id:
          type: string
          description: ID of the invoice redeeming the voucher.
        code:
          type: string
          description: Unique code of the voucher.

    # Plans
    PostPlanRequest:
      type: object
      required:
        - title
        - summary
        - currency
      properties:
        title:
          type: string
          description: Short description about the plan
        summary:
          type: string
          description: A detailed summary explaining what the plan is about.
        currency:
          $ref: "#/components/schemas/CurrencyType"
          description: Currency code in ISO 4217 format.
        options:
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: "#/components/schemas/PlanLineOption"
    PutPlanRequest:
      type: object
      properties:
        title:
          type: string
          description: Short description about the plan
        summary:
          type: string
          description: A detailed summary detailing what the plan is about.
        currency:
          $ref: "#/components/schemas/CurrencyType"
          description: Currency code in ISO 4217 format.
    PostPlanOptionRequest:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: "#/components/schemas/PlanLineOption"
    PutPlanOptionRequest:
      type: object
      properties:
        description:
          type: string
          description: Detailed description about the option.
        unit_price:
          type: number
          format: float
          minimum: 0.01
          description: Price per unit.
        billing_interval:
          type: number
          minimum: 1
          maximum: 365
          description: The number of days for each billing interval. (e.g. 30 for monthly or 365 for yearly)
        trial_period:
          type: number
          minimum: 0
          maximum: 365
          description: The number of days before the first billable invoice is due.
        attributes:
          type: object
          maxProperties: 16
          description: Custom key-value pairs that can be used for option specific features.

    # Invoices
    PostInvoiceRequest:
      type: object
      required:
        - customer
        - summary
        - due
      properties:
        customer:
          type: string
          description: ID or email address of the customer being billed.
        summary:
          type: string
          description: Detailed description about the invoice.
        currency:
          $ref: "#/components/schemas/CurrencyType"
          description: Currency to be used. Defaults to customer currency is none is provided.
        due:
          type: string
          description: Due date in relative time. (e.g. 'In 3 days')
        items:
          type: array
          minItems: 0
          maxItems: 50
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
    PutInvoiceRequest:
      type: object
      properties:
        summary:
          type: string
          description: Detailed description about the invoice.
        currency:
          $ref: "#/components/schemas/CurrencyType"
        due:
          type: string
          description: Due date in relative time. (e.g. 'In 3 days')
    PostInvoiceItemRequest:
      type: object
      properties:
        items:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: "#/components/schemas/InvoiceLineItem"
    PutInvoiceItemRequest:
      type: object
      properties:
        description:
          type: string
          description: Detailed description about the item.
        quantity:
          type: number
          description: Number of units.
        unit_price:
          type: number
          format: float
          description: Price per unit.

    # Subscriptions
    PostSubscriptionRequest:
      type: object
      required:
        - customer
        - auto_renew
        - items
      properties:
        customer:
          type: string
          description: ID or email address of the customer being billed.
        auto_renew:
          type: boolean
          description: Flag indicating if the subscription should auto renew the subscription at each billing cycle.
        trial_period:
          type: number
          minimum: 0
          maximum: 365
          description: The number of days before the first billable invoice is due. Required if more than 1 item is being subscribed to.
        items:
          type: array
          minItems: 1
          maxItems: 10
          items:
            $ref: "#/components/schemas/SubscriptionLineItem"

    # Payments
    PostInitiateWalletPaymentRequest:
      title: Instant
      type: object
      required:
        - invoice_id
        - redirect_url
      properties:
        invoice_id:
          type: string
          description: The ID of the invoice being paid.
          pattern: "^inv_.*$"
        redirect_url:
          type: string
          format: url
          description: The url to redirect the customer to after completing the payment.
    PostInitiateQrPaymentRequest:
      title: QR
      type: object
      required:
        - invoice_id
        - provider
        - billing_details
      properties:
        invoice_id:
          type: string
          description: The ID of the invoice being paid.
          pattern: "^inv_.*$"
        provider:
          $ref: "#/components/schemas/PaymentProviderType"
        billing_details:
          $ref: "#/components/schemas/PaymentBillingDetails"
    PostInitiateCardPaymentRequest:
      title: Card
      type: object
      required:
        - invoice_id
        - card_details
        - billing_details
      properties:
        invoice_id:
          type: string
          description: The ID of the invoice being paid.
          pattern: "^inv_.*$"
        card_details:
          type: object
          required:
            - card_holder
            - card_number
            - exp_month
            - exp_year
            - brand
            - security
          properties:
            card_holder:
              type: string
              description: Full card holder name.
            card_number:
              type: string
              description: Full 16-digit card number.
            exp_month:
              type: string
              description: Card expiration month.
            exp_year:
              type: string
              description: Card expiration year.
            brand:
              type: string
              description: Card brand.
            security:
              type: string
              description: Card CVC, CVV or PIN.
        billing_details:
          $ref: "#/components/schemas/PaymentBillingDetails"
    PostInitiateBankPaymentRequest:
      title: Bank
      type: object
      required:
        - invoice_id
        - swift_code
        - redirect_url
      properties:
        invoice_id:
          type: string
          description: The ID of the invoice being paid.
          pattern: "^inv_.*$"
        swift_code:
          $ref: "#/components/schemas/BankSwiftType"
        redirect_url:
          type: string
          format: url
          description: The url to redirect the customer to after completing the payment.
    PostRefundPaymentRequest:
      type: object
      required:
        - type
        - note
      properties:
        type:
          type: string
          enum:
            - full
            - partial
          description: Type of refund to perform
        amount:
          type: number
          format: float
          description: Amount to refund. Required when type is set to partial.
        note:
          type: string
          description: Reason for refund.

    # Payment Providers
    PostProviderRequest:
      type: object
      required:
        - slug
      properties:
        slug:
          $ref: "#/components/schemas/PaymentProviderType"
        merchant_id:
          type: string
          description: Provider specific Merchant ID.
        secret_key:
          type: string
          description: Provider specific API credentials.
    PutProviderRequest:
      type: object
      required:
        - merchant_id
        - secret_key
      properties:
        merchant_id:
          type: string
          description: Provider specific Merchant ID.
        secret_key:
          type: string
          description: Provider specific API credentials.
